git_sv√∂r

1. 
a) cd: The cd command is used to change the current directory.
b) cd ~: Typing "~" is easier than typing the full name of the user's home directory.
c) ls: Lists directory contents of files and directories.
d) pwd: Prints the name of the working directory.
e) mkdir: Creates new directories in your file system.

2.
a) git clone: Clones a repository into a new directory.
	- Clones a repository into a newly created directory.
b) git log: Shows commit logs.
	- Because its shows the commit logs.
c) git status: Shows the working tree status.
	- Displays paths differences.
d) git diff: Shows changes between commits, commit and working tree, etc.
	- It shows us differneces.
e) git checkout: Switch branches or restore working tree files.
	- Updates files in the working tree to match the version in the index or the specified tree.

3.
a) get diff: Shows differences between commit.
b) git diff --staged: Shows differences between the working directory and the staging area.
c) git diff commit1 commit2: Shows differences between the staging area and the Repository.

4. It manages changes to documents, computer programs, large web sites, and other collections of information.

5. Github has many benefits. It makes it it easy to make or contribute to your favorite open source projects, it stores a copy of your projects repository just like any other developer, Markdown ect.

6. Committed means that the data is safely stored in your local database so whenever you write something that works. I'll do a commit to save my progress.

7. 
	Working driectory: The working tree is a single checkout of one version of the project. These files are pulled out of the compressed database in the Git directory and placed on disk for you to use or modify.
	Staging Area: The staging area is a file, generally contained in your Git directory, that stores information about what will go into your next commit.
	Repository: You do a commit, which takes the files as they are in the staging area and stores that snapshot permanently to your Git directory.

8. We can use branches when we are trying something new and dont want to risk our correct code. If the the branch works we can merge it with the rest of our code.